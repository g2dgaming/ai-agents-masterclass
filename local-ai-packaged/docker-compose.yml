volumes:
  n8n_storage:
  postgres_storage:
  qdrant_storage:
  open-webui_storage:
  whisper_cache:
  coqui_tts_storage:
  home-assistant_storage:

networks:
  demo:

x-n8n: &service-n8n
  build:
    context: ./n8n
  networks: ['demo']
  environment:
    - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
  links:
    - postgres

x-ollama: &service-ollama
  image: ollama/ollama:latest
  container_name: ollama
  networks: ['demo']
  restart: unless-stopped
  ports:
    - 11434:11434
  volumes:
    - ~/samsung_t7/ollama:/root/.ollama
x-init-ollama: &init-ollama
  image: ollama/ollama:latest
  networks: ['demo']
  container_name: ollama-pull-llama
  volumes:
    - /home/samarth/samsung_t7/ollama:/root/.ollama
  entrypoint: /bin/sh
  command:
    - "-c"
    - "OLLAMA_HOST=ollama:11434 ollama pull hermes3:8b-llama3.1-fp16"

services:

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    networks: ['demo']
    restart: unless-stopped
    container_name: open-webui
    ports:
      - "3000:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - open-webui_storage:/app/backend/data

  postgres:
    image: postgres:16-alpine
    networks: ['demo']
    restart: unless-stopped
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n-import:
    <<: *service-n8n
    container_name: n8n-import
    entrypoint: /bin/sh
    command:
      - "-c"
      - "n8n import:credentials --separate --input=/backup/credentials && n8n import:workflow --separate --input=/backup/workflows"
    volumes:
      - ./n8n/backup:/backup
    depends_on:
      postgres:
        condition: service_healthy

  n8n:
    <<: *service-n8n
    container_name: n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
      - "8888:8888"
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./n8n/backup:/backup
      - ./shared:/data/shared
    environment:
      - N8N_SECURE_COOKIE=${N8N_SECURE_COOKIE}
      - WEBHOOK_URL=http://192.168.1.36:5678
      - VUE_APP_WEBHOOK_URL=http://192.168.1.36:5678
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - N8N_DIAGNOSTICS_ENABLED=false
      - N8N_PERSONALIZATION_ENABLED=false
      - N8N_ENCRYPTION_KEY
      - N8N_USER_MANAGEMENT_JWT_SECRET
      - WEBHOOK_URL=http://192.168.1.36:5678
      - VUE_APP_WEBHOOK_URL=http://192.168.1.36:5678
      - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
      - N8N_COMMUNITY_PACKAGES_ENABLED=true
      - N8N_COMMUNITY_NODES_ENABLED=true
    depends_on:
      postgres:
        condition: service_healthy
      n8n-import:
        condition: service_completed_successfully


  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    networks: ['demo']
    restart: unless-stopped
    ports:
      - "6333:6333"
    volumes:
      - qdrant_storage:/qdrant/storage

  faster-whisper-stt:
    image: lscr.io/linuxserver/faster-whisper:latest
    container_name: faster-whisper-stt
    networks: ['demo']
    restart: unless-stopped
    ports:
      - "10300:10300"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
      - WHISPER_MODEL=medium.en
      - WHISPER_LANG=en #optional
      - COMPUTE_TYPE=int8  # Use float16 for best GPU performance
      - CUDA_VISIBLE_DEVICES=0  # Use first GPU (change if needed)
    volumes:
      - whisper_cache:/config/models

  web_scraper:
      build:
        context: ./web_scraper
      container_name: web_scraper
      restart: unless-stopped
      ports:
        - "6969:6969"
      networks: ['demo']

  coqui-tts:
    container_name: coqui-tts
    build:
      context: ./TTS
    privileged: true
    ports:
      - "5002:5002"
    restart: unless-stopped
    runtime:
      nvidia
    networks:
      - demo
    entrypoint: ["python3", "TTS/server/server.py", "--model_name","tts_models/en/vctk/vits"]
    volumes:
      - coqui_tts_storage:/data
    environment:
      - TTS_LANG=en
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  ollama-cpu-alt:
    image: ollama/ollama:latest
    container_name: ollama-cpu-alt
    networks: ['demo']
    restart: unless-stopped
    ports:
      - "11435:11435"
    environment:
      - OLLAMA_HOST=0.0.0.0:11435
  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    restart: always
    ports:
      - "9000:9000/tcp"
    environment:
      - TZ=Asia/Kolkata
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/portainer:/data

  satellite:
    image: "wyoming-satellite:latest"
    container_name: satellite
    build:
      context: ./wyoming-satellite
    devices:
      - /dev/snd:/dev/snd
    group_add:
      - audio
    privileged: true
    ports:
      - "10700:10700"
    networks:
      - demo
    healthcheck:
      test: ["CMD-SHELL", "pgrep -x satellite || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
  openwakeword:
    image: "wyoming-openwakeword"
    container_name: openwakeword
    build:
      context: ./wyoming-openwakeword
    ports:
      - "10400:10400"
    networks:
      - demo
    depends_on:
      satellite:
        condition: service_healthy
  redis:
    image: redis:alpine
    container_name: redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data
    restart: always

  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:dev"
    volumes:
      - ./homeassistant/config:/config
    restart: unless-stopped
    privileged: true
    ports:
      - "8123:8123"
    networks:
      - demo
    depends_on:
      - openwakeword
      - satellite
      - coqui-tts
      - faster-whisper-stt
  ollama-cpu:
    profiles: ["cpu"]
    <<: *service-ollama

  ollama-gpu:
    profiles: ["gpu-nvidia"]
    privileged: true
    runtime: nvidia
    <<: *service-ollama
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - /mnt/ssd/config/sonarr:/config
      - /mnt/ssd/tv:/tv # Correct path for TV shows
      - /home/samarth/samsung_t7/media/tv:/downloads/tv # Downloads go directly to media folder
    ports:
      - "8989:8989"
    restart: unless-stopped
    networks: ['demo']

  bazarr:
      image: linuxserver/bazarr:latest
      container_name: bazarr
      environment:
        - PUID=1000
        - PGID=1000
      volumes:
        - /mnt/ssd/config/bazarr:/config
        - /mnt/ssd/tv:/tv
        - /home/samarth/samsung_t7/movies:/movies
      ports:
        - "6767:6767"
      restart: unless-stopped
      networks: ['demo']

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - /mnt/ssd/config/radarr:/config
      - /home/samarth/samsung_t7/movies:/movies # Correct path for Movies
      - /home/samarth/samsung_t7/media/movies:/downloads/movies # Downloads go directly to media folder
    ports:
      - "7878:7878"
    restart: unless-stopped
    networks: ['demo']

  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - /mnt/ssd/config/prowlarr:/config
    ports:
      - "9696:9696"
    restart: unless-stopped
    networks: ['demo']

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    volumes:
      - /mnt/ssd/config/qbittorrent:/config
      - /home/samarth/samsung_t7/media/movies:/downloads/movies # Ensures movies go directly to the media folder
      - /home/samarth/samsung_t7/media/tv:/downloads/tv # Ensures TV shows go directly to the media folder
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped
    networks: ['demo']

  jellyfin:
    image: linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - /mnt/ssd/config/jellyfin:/config
      - /home/samarth/samsung_t7/movies:/movies # Correct path for Movies
      - /mnt/ssd/tv:/tv # Jellyfin reads TV shows from here
    ports:
      - "8096:8096"
    restart: unless-stopped
    networks: ['demo']

  ollama-pull-llama-cpu:
    profiles: ["cpu"]
    <<: *init-ollama
    depends_on:
      - ollama-cpu

  ollama-pull-llama-gpu:
    profiles: ["gpu-nvidia"]
    <<: *init-ollama
    depends_on:
      - ollama-gpu
